org: dannytszho
app: aws-serverless-trails-api
service: aws-serverless-trails-api
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:DescribeTable"
            - "dynamodb:Query"
            - "dynamodb:PutItem"
            - "dynamodb:GetItem*"
            - "dynamodb:Scan*"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-trailsTable-${sls:stage}
  environment:
    DYNAMODB_TRAILS_TABLE: ${self:service}-trailsTable-${sls:stage}

custom:
  appSync:
    name: ${self:service}-appsync-${sls:stage}
    authenticationType: API_KEY
    schema:
      - src/graphql/schema.graphql
    dataSources:
      - type: AMAZON_DYNAMODB
        name: CustomerTable
        description: DynamoDB Table for trails
        config:
          tableName: ${self:provider.environment.DYNAMODB_TRAILS_TABLE} # Where MyTable is a dynamodb table defined in Resources
    mappingTemplates:
      - dataSource: CustomerTable
        type: Mutation
        field: createTrail
        request: "create_trail/request.vtl"
        response: "common-item-response.vtl"
      - dataSource: CustomerTable
        type: Query
        field: getTrail
        request: "get_trail/request.vtl"
        response: "common-item-response.vtl"
      - dataSource: CustomerTable
        type: Mutation
        field: updateTrail
        request: "update_trail/request.vtl"
        response: "common-item-response.vtl"

functions:
  graphqlHandler:
    handler: src/graphql/handler.graphqlHandler

  getTrailsList:
    handler: src/handlers.getTrailsList
    events:
      - httpApi:
          path: /rest
          method: get
  getTrail:
    handler: src/handlers.getTrail
    events:
      - httpApi:
          path: /{id}
          method: get
  createTrail:
    handler: src/handlers.createTrail
    events:
      - httpApi:
          path: /
          method: post
  updateTrail:
    handler: src/handlers.updateTrail
    events:
      - httpApi:
          path: /{id}
          method: put
  deleteTrail:
    handler: src/handlers.deleteTrail
    events:
      - httpApi:
          path: /{id}
          method: delete

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-trailsTable-${sls:stage}

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-appsync-plugin
