org: dannytszho
app: aws-serverless-trails-api
service: aws-serverless-trails-api
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:Get*"
            - "dynamodb:Scan*"
            - "dynamodb:UpdateItem"
            - "dynamodb:DeleteItem"
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-trailsTable-${sls:stage}
  environment:
    DYNAMODB_TRAILS_TABLE: ${self:service}-trailsTable-${sls:stage}

functions:
  getTrails:
    handler: getTrails.getTrails
    events:
      - httpApi:
          path: /
          method: get
  getTrail:
    handler: getTrail.getTrail
    events:
      - httpApi:
          path: /{id}
          method: get
  createTrail:
    handler: createTrail.createTrail
    events:
      - httpApi:
          path: /
          method: post
  updateTrail:
    handler: updateTrail.updateTrail
    events:
      - httpApi:
          path: /{id}
          method: put
  # deleteTrail:
  #   handler: deleteTrail.deleteTrail
  #   events:
  #     - httpApi:
  #         path:

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-trailsTable-${sls:stage}

plugins:
  - serverless-plugin-typescript
  - serverless-offline
